{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:5000\"; // Cambia esto a la URL del backend\n\n// Funci贸n para enviar un mensaje al bot\nexport const sendMessageToBot = async message => {\n  try {\n    const response = await axios.post(`${API_BASE}/bot`, {\n      message\n    });\n    return response.data; // El backend debe retornar el texto del bot en { text: \"...\" }\n  } catch (error) {\n    console.error(\"Error al enviar mensaje al bot:\", error);\n    throw error;\n  }\n};\n\n// Funci贸n para enviar datos del usuario al backend\nexport const sendUserData = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE}/api/user-data`, userData);\n    return response.data; // El backend debe confirmar el almacenamiento\n  } catch (error) {\n    console.error(\"Error al enviar datos del usuario:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE","sendMessageToBot","message","response","post","data","error","console","sendUserData","userData"],"sources":["C:/wamp/www/Cafe-Taipa/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:5000\"; // Cambia esto a la URL del backend\r\n\r\n// Funci贸n para enviar un mensaje al bot\r\nexport const sendMessageToBot = async (message) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE}/bot`, { message });\r\n    return response.data; // El backend debe retornar el texto del bot en { text: \"...\" }\r\n  } catch (error) {\r\n    console.error(\"Error al enviar mensaje al bot:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funci贸n para enviar datos del usuario al backend\r\nexport const sendUserData = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE}/api/user-data`, userData);\r\n    return response.data; // El backend debe confirmar el almacenamiento\r\n  } catch (error) {\r\n    console.error(\"Error al enviar datos del usuario:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,QAAQ,MAAM,EAAE;MAAEE;IAAQ,CAAC,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,QAAQ,gBAAgB,EAAES,QAAQ,CAAC;IACxE,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}