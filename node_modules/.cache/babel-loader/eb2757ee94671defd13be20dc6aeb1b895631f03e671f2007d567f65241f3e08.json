{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  threadId: '',\n  valueProposition: \"\",\n  valueBrandStrategy: \"\",\n  valuePublications: \"\"\n};\nconst threadSlice = createSlice({\n  name: 'thread',\n  initialState,\n  reducers: {\n    setThreadId(state, action) {\n      state.threadId = action.payload;\n    },\n    clearThreadId(state) {\n      state.threadId = '';\n    },\n    setValueProposition: (state, action) => {\n      state.valueProposition = action.payload;\n    },\n    setValueBrandStrategy: (state, action) => {\n      state.valueBrandStrategy = action.payload;\n    },\n    setValuePublications: (state, action) => {\n      state.valuePublications = action.payload;\n    }\n  }\n});\nexport const {\n  setThreadId,\n  clearThreadId,\n  setValueProposition,\n  setValueBrandStrategy\n} = threadSlice.actions;\nexport default threadSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","threadId","valueProposition","valueBrandStrategy","valuePublications","threadSlice","name","reducers","setThreadId","state","action","payload","clearThreadId","setValueProposition","setValueBrandStrategy","setValuePublications","actions","reducer"],"sources":["C:/wamp/www/Cafe-Taipa/src/redux/slices/threadSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  threadId: '',\r\n  valueProposition: \"\",\r\n  valueBrandStrategy: \"\",\r\n  valuePublications: \"\",\r\n};\r\n\r\nconst threadSlice = createSlice({\r\n  name: 'thread',\r\n  initialState,\r\n  reducers: {\r\n    setThreadId(state, action) {\r\n      state.threadId = action.payload;\r\n    },\r\n    clearThreadId(state) {\r\n      state.threadId = '';\r\n    },\r\n    setValueProposition: (state, action) => {\r\n      state.valueProposition = action.payload; \r\n    },\r\n    setValueBrandStrategy: (state, action) => {\r\n      state.valueBrandStrategy = action.payload; \r\n    },\r\n    setValuePublications: (state, action) => {\r\n      state.valuePublications = action.payload; \r\n    },\r\n  },\r\n});\r\n\r\nexport const { setThreadId, clearThreadId, setValueProposition, setValueBrandStrategy } = threadSlice.actions;\r\nexport default threadSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,gBAAgB,EAAE,EAAE;EACpBC,kBAAkB,EAAE,EAAE;EACtBC,iBAAiB,EAAE;AACrB,CAAC;AAED,MAAMC,WAAW,GAAGN,WAAW,CAAC;EAC9BO,IAAI,EAAE,QAAQ;EACdN,YAAY;EACZO,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,aAAaA,CAACH,KAAK,EAAE;MACnBA,KAAK,CAACR,QAAQ,GAAG,EAAE;IACrB,CAAC;IACDY,mBAAmB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACP,gBAAgB,GAAGQ,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,qBAAqB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAACN,kBAAkB,GAAGO,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDI,oBAAoB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACL,iBAAiB,GAAGM,MAAM,CAACC,OAAO;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI,aAAa;EAAEC,mBAAmB;EAAEC;AAAsB,CAAC,GAAGT,WAAW,CAACW,OAAO;AAC7G,eAAeX,WAAW,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}