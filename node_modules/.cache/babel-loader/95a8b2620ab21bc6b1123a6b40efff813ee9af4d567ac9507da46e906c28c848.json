{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptores para agregar seguridad o manejo de tokens\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken'); // Cargar el token cifrado si existe\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  const organizationId = process.env.REACT_APP_ORGANIZATION_ID; // Obtén el Organization_id\n  if (organizationId) {\n    config.headers['X-Organization-ID'] = organizationId; // Agrega el Organization_id al header (opcional)\n  }\n  return config;\n});\nexport const registerUser = async (name, email) => {\n  try {\n    // Simulación de API por ahora\n    const response = {\n      data: {\n        token: 'mocked-token'\n      }\n    };\n    return response.data;\n  } catch (error) {\n    console.error('Error en registerUser:', error);\n    throw error;\n  }\n};\nexport const sendChatRequest = async (input, threadId = null) => {\n  try {\n    const data = {\n      agent_id: process.env.REACT_APP_AGENT_ID,\n      input,\n      ...(threadId && {\n        thread_id: threadId\n      }) // Agregar thread_id solo si está presente\n    };\n    const response = await apiClient.post('/chat', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en sendChatRequest:', error);\n    throw error;\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","organizationId","REACT_APP_ORGANIZATION_ID","registerUser","name","email","response","data","error","console","sendChatRequest","input","threadId","agent_id","REACT_APP_AGENT_ID","thread_id","post"],"sources":["C:/wamp/www/Cafe-Taipa/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptores para agregar seguridad o manejo de tokens\r\napiClient.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken'); // Cargar el token cifrado si existe\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  const organizationId = process.env.REACT_APP_ORGANIZATION_ID; // Obtén el Organization_id\r\n  if (organizationId) {\r\n    config.headers['X-Organization-ID'] = organizationId; // Agrega el Organization_id al header (opcional)\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport const registerUser = async (name, email) => {\r\n  try {\r\n    // Simulación de API por ahora\r\n    const response = {\r\n      data: {\r\n        token: 'mocked-token',\r\n      },\r\n    };\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en registerUser:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const sendChatRequest = async (input, threadId = null) => {\r\n  try {\r\n    const data = {\r\n      agent_id: process.env.REACT_APP_AGENT_ID,\r\n      input,\r\n      ...(threadId && { thread_id: threadId }), // Agregar thread_id solo si está presente\r\n    };\r\n    const response = await apiClient.post('/chat', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en sendChatRequest:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC3CC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,MAAMI,cAAc,GAAGZ,OAAO,CAACC,GAAG,CAACY,yBAAyB,CAAC,CAAC;EAC9D,IAAID,cAAc,EAAE;IAClBL,MAAM,CAACJ,OAAO,CAAC,mBAAmB,CAAC,GAAGS,cAAc,CAAC,CAAC;EACxD;EAEA,OAAOL,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EACjD,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAE;QACJV,KAAK,EAAE;MACT;IACF,CAAC;IACD,OAAOS,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,GAAG,IAAI,KAAK;EAC/D,IAAI;IACF,MAAML,IAAI,GAAG;MACXM,QAAQ,EAAExB,OAAO,CAACC,GAAG,CAACwB,kBAAkB;MACxCH,KAAK;MACL,IAAIC,QAAQ,IAAI;QAAEG,SAAS,EAAEH;MAAS,CAAC,CAAC,CAAE;IAC5C,CAAC;IACD,MAAMN,QAAQ,GAAG,MAAMpB,SAAS,CAAC8B,IAAI,CAAC,OAAO,EAAET,IAAI,CAAC;IACpD,OAAOD,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAetB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}