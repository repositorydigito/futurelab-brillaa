{"ast":null,"code":"import axios from 'axios';\nconst bffLeadClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BFF_LEAD,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nbffLeadClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const registerUser = async (name, email, passcode = null) => {\n  try {\n    const organizationId = process.env.REACT_APP_ORGANIZATION_ID;\n    const requestBody = {\n      name,\n      email,\n      organization_id: organizationId,\n      ...(passcode && {\n        passcode\n      }) // Agrega passcode solo si existe\n    };\n    const response = await bffLeadClient.post('/lead_auth', requestBody);\n    return response.data; // Devuelve el token y otros datos relevantes\n  } catch (error) {\n    console.error('Error en registerUser:', error);\n    throw error;\n  }\n};\nexport default bffLeadClient;","map":{"version":3,"names":["axios","bffLeadClient","create","baseURL","process","env","REACT_APP_API_BFF_LEAD","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","registerUser","name","email","passcode","organizationId","REACT_APP_ORGANIZATION_ID","requestBody","organization_id","response","post","data","error","console"],"sources":["C:/wamp/www/Cafe-Taipa/src/services/bffLeadClient.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst bffLeadClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BFF_LEAD,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nbffLeadClient.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  \r\n  export const registerUser = async (name, email, passcode = null) => {\r\n    try {\r\n      const organizationId = process.env.REACT_APP_ORGANIZATION_ID; \r\n      const requestBody = {\r\n        name,\r\n        email,\r\n        organization_id: organizationId,\r\n        ...(passcode && { passcode }), // Agrega passcode solo si existe\r\n      };\r\n  \r\n      const response = await bffLeadClient.post('/lead_auth', requestBody);\r\n      return response.data; // Devuelve el token y otros datos relevantes\r\n    } catch (error) {\r\n      console.error('Error en registerUser:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  \r\n  export default bffLeadClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC3CC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFN,aAAa,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC/C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAGF,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,GAAG,IAAI,KAAK;EAClE,IAAI;IACF,MAAMC,cAAc,GAAGhB,OAAO,CAACC,GAAG,CAACgB,yBAAyB;IAC5D,MAAMC,WAAW,GAAG;MAClBL,IAAI;MACJC,KAAK;MACLK,eAAe,EAAEH,cAAc;MAC/B,IAAID,QAAQ,IAAI;QAAEA;MAAS,CAAC,CAAC,CAAE;IACjC,CAAC;IAED,MAAMK,QAAQ,GAAG,MAAMvB,aAAa,CAACwB,IAAI,CAAC,YAAY,EAAEH,WAAW,CAAC;IACpE,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,eAAe1B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}