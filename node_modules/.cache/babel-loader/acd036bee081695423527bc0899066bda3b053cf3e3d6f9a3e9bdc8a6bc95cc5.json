{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptores para agregar seguridad o manejo de tokens\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken'); // Cargar el token cifrado si existe\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const registerUser = async (name, email, passcode = null) => {\n  try {\n    const organizationId = process.env.REACT_APP_ORGANIZATION_ID; // Obtén el Organization_id desde .env\n\n    const requestBody = {\n      name,\n      email,\n      organization_id: organizationId,\n      ...(passcode && {\n        passcode\n      }) // Agrega passcode solo si existe\n    };\n    const response = await apiClient.post('/register', requestBody);\n    return response.data; // Devuelve el token y otros datos relevantes\n  } catch (error) {\n    console.error('Error en registerUser:', error);\n    throw error;\n  }\n};\nexport const sendChatRequest = async (input, threadId = null) => {\n  try {\n    const data = {\n      agent_id: process.env.REACT_APP_AGENT_ID,\n      input,\n      ...(threadId && {\n        thread_id: threadId\n      }) // Agregar thread_id solo si está presente\n    };\n    const response = await apiClient.post('/chat', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en sendChatRequest:', error);\n    throw error;\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","registerUser","name","email","passcode","organizationId","REACT_APP_ORGANIZATION_ID","requestBody","organization_id","response","post","data","error","console","sendChatRequest","input","threadId","agent_id","REACT_APP_AGENT_ID","thread_id"],"sources":["C:/wamp/www/Cafe-Taipa/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptores para agregar seguridad o manejo de tokens\r\napiClient.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken'); // Cargar el token cifrado si existe\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const registerUser = async (name, email, passcode = null) => {\r\n  try {\r\n    const organizationId = process.env.REACT_APP_ORGANIZATION_ID; // Obtén el Organization_id desde .env\r\n\r\n    const requestBody = {\r\n      name,\r\n      email,\r\n      organization_id: organizationId,\r\n      ...(passcode && { passcode }), // Agrega passcode solo si existe\r\n    };\r\n\r\n    const response = await apiClient.post('/register', requestBody);\r\n    return response.data; // Devuelve el token y otros datos relevantes\r\n  } catch (error) {\r\n    console.error('Error en registerUser:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const sendChatRequest = async (input, threadId = null) => {\r\n  try {\r\n    const data = {\r\n      agent_id: process.env.REACT_APP_AGENT_ID,\r\n      input,\r\n      ...(threadId && { thread_id: threadId }), // Agregar thread_id solo si está presente\r\n    };\r\n    const response = await apiClient.post('/chat', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en sendChatRequest:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC3CC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,GAAG,IAAI,KAAK;EAClE,IAAI;IACF,MAAMC,cAAc,GAAGhB,OAAO,CAACC,GAAG,CAACgB,yBAAyB,CAAC,CAAC;;IAE9D,MAAMC,WAAW,GAAG;MAClBL,IAAI;MACJC,KAAK;MACLK,eAAe,EAAEH,cAAc;MAC/B,IAAID,QAAQ,IAAI;QAAEA;MAAS,CAAC,CAAC,CAAE;IACjC,CAAC;IAED,MAAMK,QAAQ,GAAG,MAAMvB,SAAS,CAACwB,IAAI,CAAC,WAAW,EAAEH,WAAW,CAAC;IAC/D,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,GAAG,IAAI,KAAK;EAC/D,IAAI;IACF,MAAML,IAAI,GAAG;MACXM,QAAQ,EAAE5B,OAAO,CAACC,GAAG,CAAC4B,kBAAkB;MACxCH,KAAK;MACL,IAAIC,QAAQ,IAAI;QAAEG,SAAS,EAAEH;MAAS,CAAC,CAAC,CAAE;IAC5C,CAAC;IACD,MAAMP,QAAQ,GAAG,MAAMvB,SAAS,CAACwB,IAAI,CAAC,OAAO,EAAEC,IAAI,CAAC;IACpD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAe1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}